<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Expectations" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="6" skipped="0" failures="4" errors="0" time="0">
    <testcase time="0" classname="Expectations" name="Success"/>
    <testcase time="0" classname="Expectations" name="Failure:1">
      <failure type="failure" message="Failure has been forced">Failure has been forced
1: fail() at reporters/tests.R:8</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:2a">
      <failure type="failure" message="Failure has been forced">Failure has been forced
1: f() at reporters/tests.R:12
2: fail() at reporters/tests.R:11</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:2b">
      <failure type="failure" message="FALSE isn't true.">FALSE isn't true.
1: expect_true(FALSE) at reporters/tests.R:15</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:loop">
      <failure type="failure" message="`i` not equal to 2.">`i` not equal to 2.
1/1 mismatches
[1] 1 - 2 == -1
1: expect_equal(i, 2) at reporters/tests.R:20</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:loop"/>
  </testsuite>
  <testsuite name="Errors" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="2" skipped="0" failures="0" errors="2" time="0">
    <testcase time="0" classname="Errors" name="Error:1">
      <error type="error" message="stop">stop
1: stop("stop") at reporters/tests.R:28</error>
    </testcase>
    <testcase time="0" classname="Errors" name="Error:3">
      <error type="error" message="!">!
1: f() at reporters/tests.R:36
2: g() at reporters/tests.R:32
3: h() at reporters/tests.R:33
4: stop("!") at reporters/tests.R:34</error>
    </testcase>
  </testsuite>
  <testsuite name="Recursion" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="Recursion" name="Recursion:1">
      <error type="error" message="This is deep">This is deep
1: f(25) at reporters/tests.R:45
2: f(x - 1) at reporters/tests.R:43
3: f(x - 1) at reporters/tests.R:43
4: f(x - 1) at reporters/tests.R:43
5: f(x - 1) at reporters/tests.R:43
6: f(x - 1) at reporters/tests.R:43
7: f(x - 1) at reporters/tests.R:43
8: f(x - 1) at reporters/tests.R:43
9: f(x - 1) at reporters/tests.R:43
10: f(x - 1) at reporters/tests.R:43
...
18: f(x - 1) at reporters/tests.R:43
19: f(x - 1) at reporters/tests.R:43
20: f(x - 1) at reporters/tests.R:43
21: f(x - 1) at reporters/tests.R:43
22: f(x - 1) at reporters/tests.R:43
23: f(x - 1) at reporters/tests.R:43
24: f(x - 1) at reporters/tests.R:43
25: f(x - 1) at reporters/tests.R:43
26: f(x - 1) at reporters/tests.R:43
27: stop("This is deep") at reporters/tests.R:43</error>
    </testcase>
  </testsuite>
  <testsuite name="Skips" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="3" skipped="3" failures="0" errors="0" time="0">
    <testcase time="0" classname="Skips" name="Skip:1">
      <skipped/>
    </testcase>
    <testcase time="0" classname="Skips" name="Skip:2">
      <skipped/>
    </testcase>
    <testcase time="0" classname="Skips" name="Skip:3">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Warnings" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="3" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="Warnings" name="Warning:1"/>
    <testcase time="0" classname="Warnings" name="Warning:2"/>
    <testcase time="0" classname="Warnings" name="Warning:2"/>
  </testsuite>
  <testsuite name="Output" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="2" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="Output" name="Output:1"/>
    <testcase time="0" classname="Output" name="Output:1"/>
  </testsuite>
</testsuites>
